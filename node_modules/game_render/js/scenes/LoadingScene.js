import Phaser from '../phaser.js';

import start from '../../assets/scene/start.jpg';
import win from '../../assets/scene/win.png';
import lose from '../../assets/scene/lose.png';
import draw from '../../assets/scene/draw.png';

import mine from '../../assets/map/mine.png';
import grass from '../../assets/map/grass.png';
import ground from '../../assets/map/ground.png';
import wall from '../../assets/map/wall.png';

import bomberman_1 from '../../assets/character/bomberman_1.png';
import bomberman_1_dead from '../../assets/character/bomberman_1_dead.png';
import monster_1 from '../../assets/character/monster_1.png';
import bomberman_2 from '../../assets/character/bomberman_2.png';
import bomberman_2_dead from '../../assets/character/bomberman_2_dead.png';
import monster_2 from '../../assets/character/monster_2.png';

import bomb from '../../assets/object/bomb.png';
import brick from '../../assets/object/brick.png';
import explosion from '../../assets/object/explosion.png';

import powerup_bombs from '../../assets/item/powerup_bombs.png';
import powerup_flames from '../../assets/item/powerup_flames.png';
import powerup_speed from '../../assets/item/powerup_speed.png';
import powerup_stars from '../../assets/item/powerup_stars.png';

import star_icon from '../../assets/info/star.png';
import bomb_icon from '../../assets/info/bomb.png';
import brick_icon from '../../assets/info/brick.png';
import flame_icon from '../../assets/info/flame.png';
import roller_icon from '../../assets/info/roller.png';
import paw_icon from '../../assets/info/paw.png';
import flag_1 from '../../assets/info/flag_1.png';
import flag_2 from '../../assets/info/flag_2.png';

export default class LoadingScene extends Phaser.Scene {

  constructor () {
    super('LoadingScene');
  }

  preload() {
    this.load.image('startScene', start);
    this.load.image('win', win);
    this.load.image('lose', lose);
    this.load.image('draw', draw);

    this.textures.addBase64('mine', mine);
    this.textures.addBase64('grass', grass);
    this.textures.addBase64('ground', ground);
    this.textures.addBase64('wall', wall);

    this.load.spritesheet('bomberman_1',
      bomberman_1,
      {frameWidth: 16, frameHeight: 16});
    this.load.spritesheet('bomberman_1_dead',
      bomberman_1_dead,
      {frameWidth: 16, frameHeight: 16});
    this.load.spritesheet('monster_1',
      monster_1,
      {frameWidth: 16, frameHeight: 16});
    this.load.spritesheet('bomberman_2',
      bomberman_2,
      {frameWidth: 16, frameHeight: 16});
    this.load.spritesheet('bomberman_2_dead',
      bomberman_2_dead,
      {frameWidth: 16, frameHeight: 16});
    this.load.spritesheet('monster_2',
      monster_2,
      {frameWidth: 16, frameHeight: 16});

    this.load.spritesheet('bomb',
      bomb,
      {frameWidth: 42, frameHeight: 40});
    this.load.spritesheet('brick',
      brick,
      {frameWidth: 40, frameHeight: 40});
    this.load.spritesheet('explosion',
      explosion,
      {frameWidth: 40, frameHeight: 40});

    this.load.image('powerup_bombs', powerup_bombs);
    this.load.image('powerup_flames', powerup_flames);
    this.load.image('powerup_speed', powerup_speed);
    this.load.image('powerup_stars', powerup_stars);

    this.textures.addBase64('star_icon', star_icon);
    this.textures.addBase64('bomb_icon', bomb_icon);
    this.textures.addBase64('brick_icon', brick_icon);
    this.textures.addBase64('flame_icon', flame_icon);
    this.textures.addBase64('roller_icon', roller_icon);
    this.load.image('paw_icon', paw_icon);
    this.textures.addBase64('flag_1', flag_1);
    this.textures.addBase64('flag_2', flag_2);
  }

  create() {
    this.createAnimationForBomberman('bomberman_1');
    this.createAnimationForBomberman('bomberman_2');
    this.createAnimationForMonster('monster_1');
    this.createAnimationForMonster('monster_2');

    this.createAnimationForBomb();
    this.createAnimationForBrick();
    this.createAnimationForExplosion();

    this.add.text(0, 0, '0', {fontFamily: 'Ani', fontSize: 1});
    this.add.text(0, 0, '0', {fontFamily: 'allamni', fontSize: 1});
  }

  createAnimationForBomberman(name) {
    ['_up', '_right', '_down', '_left'].forEach(function (element, index) {
      this.anims.create({
        key: name + element,
        frames: this.anims.generateFrameNumbers(name, {frames: [index, index + 4, index + 8]}),
        frameRate: 5,
        repeat: -1
      });
    }.bind(this));

    this.anims.create({
      key: name + '_stand',
      frames: [{key: name, frame: 2}],
      frameRate: 5
    });

    this.anims.create({
      key: name + '_dead',
      frames: this.anims.generateFrameNumbers(name + '_dead', {frames: [0, 1, 2]}),
      frameRate: 5,
    });
  }

  createAnimationForMonster(name) {
    ['_left', '_right', '_up', '_down'].forEach(function (element, index) {
      this.anims.create({
        key: name + element,
        frames: this.anims.generateFrameNumbers(name, {frames: (index < 2) ? [index, index + 2, index + 4] : [0, 1, 2]}),
        frameRate: 5,
        repeat: -1
      });
    }.bind(this));

    this.anims.create({
      key: name + '_stand',
      frames: [{key: name, frame: 2}],
      frameRate: 5
    });

    this.anims.create({
      key: name + '_dead',
      frames: this.anims.generateFrameNumbers(name, {frames: [0, 1, 6]}),
      frameRate: 5
    });
  }

  createAnimationForBomb() {
    this.anims.create({
      key: 'bomb_animation',
      frames: this.anims.generateFrameNumbers('bomb', {start: 0, end: 14}),
      frameRate: 7,
      repeat: -1
    });
  }

  createAnimationForBrick() {
    this.anims.create({
      key: 'brick_animation',
      frames: this.anims.generateFrameNumbers('brick', {frames: [0, 1, 2, 3, 4, 5, 6, 7]}),
      frameRate: 15
    });
  }

  createAnimationForExplosion() {
    ['_center', '_horizontal', '_left', '_right', '_vertical', '_down', '_up'].forEach(function (element, index) {
      this.anims.create({
        key: 'explosion' + element,
        frames: this.anims.generateFrameNumbers('explosion', {frames: [index, index + 7, index + 14]}),
        frameRate: 15
      });
    }.bind(this));
  }
}
