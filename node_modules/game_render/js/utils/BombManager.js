import Bomb from '../object/Bomb.js';

export default class BombManager {

    constructor() {
        this.bombs = [];
        for (let i = 0; i < 25; i++) {
            let temp = [];
            for (let j = 0; j < 15; j++)
                temp.push(null);
            this.bombs[i] = temp;
        }
    }

    setBomb(context, bombs) {
        let newBombs = [];
        for (let i = 0; i < 25; i++) {
            let temp = [];
            for (let j = 0; j < 15; j++)
                temp.push(null);
            newBombs[i] = temp;
        }


        bombs.forEach(function (item) {
            newBombs[item.x / 16][item.y / 16] = true;
        });
        for (let i = 0; i < 25; i++)
            for (let j = 0; j < 15; j++) {
                if (this.bombs[i][j] == null && newBombs[i][j])
                    this.bombs[i][j] = context.add.existing(new Bomb(context, 16 * i, 16 * j));
                if (this.bombs[i][j] != null && !newBombs[i][j]) {
                    this.bombs[i][j].destroyBomb();
                    this.bombs[i][j] = null;
                }
            }
    }
}
